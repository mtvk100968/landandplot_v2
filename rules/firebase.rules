service firebase.storage {
  match /b/{bucket}/o {
    
    // Rules for property_images
    match /property_images/{userId}/{imageName} {
      
      // Allow read access to everyone
      allow read: if true;
      
      // Allow write (upload, delete) access only to the authenticated user matching the userId
      allow write: if request.auth != null
                   && request.auth.uid == userId
                   // Enforce file size limit (max 10MB for images)
                   && request.resource.size < 10 * 1024 * 1024
                   // Restrict to image MIME types
                   && request.resource.contentType.matches('image/.*');
    }

    // Rules for property_videos
    match /property_videos/{userId}/{videoName} {
      
      // Allow read access to everyone
      allow read: if true;
      
      // Allow write (upload, delete) access only to the authenticated user matching the userId
      allow write: if request.auth != null
                   && request.auth.uid == userId
                   // Enforce file size limit (max 100MB for videos)
                   && request.resource.size < 100 * 1024 * 1024
                   // Restrict to video MIME types
                   && request.resource.contentType.matches('video/.*');
    }

    // Rules for property_documents
    match /property_documents/{userId}/{documentName} {
      
      // Allow read access to everyone
      allow read: if true;
      
      // Allow write (upload, delete) access only to the authenticated user matching the userId
      allow write: if request.auth != null
                   && request.auth.uid == userId
                   // Enforce file size limit (max 200MB for documents)
                   && request.resource.size < 200 * 1024 * 1024
                   // Restrict to specific document MIME types
                   && (request.resource.contentType.matches('application/pdf') ||
                       request.resource.contentType.matches('application/msword') ||
                       request.resource.contentType.matches('application/vnd.openxmlformats-officedocument.wordprocessingml.document'));
    }

    // Optional: Add more storage paths and their rules here if necessary

  }
}